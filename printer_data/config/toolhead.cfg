# This file contains common pin mappings for the BIGTREETECH EBB USB board.
# To use this config, the firmware should be compiled for the RP2040 with "USB".
# The "EBB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.

[mcu EBB]
serial: /dev/serial/by-id/usb-Klipper_rp2040_5044340310D2811C-if00

[temperature_sensor EBB_NTC]
sensor_type: Generic 3950
sensor_pin: EBB:gpio27

[lis2dw]
cs_pin: EBB:gpio1
spi_bus: spi0a
axes_map: z,x,y

[resonance_tester]
probe_points: 100, 100, 20
accel_chip: lis2dw



# sensor_type: MAX31865
# sensor_pin: EBB:gpio9
# spi_bus: spi1a
# rtd_nominal_r: 100
# rtd_reference_r: 430
# rtd_num_of_wires: 2

[tmc2209 extruder]
uart_pin: EBB:gpio20
run_current: 0.650
stealthchop_threshold: 999999

[fan] # fan1
pin: EBB:gpio14

[heater_fan hotend_fan] # fan2
pin: EBB:gpio4
heater: extruder
heater_temp: 50.0

#[fan_generic fan3]
#pin: EBB:gpio5

#[fan_generic 4W_FAN]
#pin: EBB:gpio16
#tachometer_pin: EBB:gpio12
#tachometer_ppr: 1

#[neopixel hotend_rgb]
#pin: EBB:gpio15


[probe]
pin: EBB:gpio13
#deactivate_on_each_sample: True
#   This determines if Klipper should execute deactivation gcode
#   between each probe attempt when performing a multiple probe
#   sequence. The default is True.
x_offset: 0.0
#   The distance (in mm) between the probe and the nozzle along the
#   x-axis. The default is 0.
y_offset: 0.0
#   The distance (in mm) between the probe and the nozzle along the
#   y-axis. The default is 0.
z_offset: 0.0
#   The distance (in mm) between the bed and the nozzle when the probe
#   triggers. This parameter must be provided.
speed: 5.0
#   Speed (in mm/s) of the Z axis when probing. The default is 5mm/s.
samples: 2
#   The number of times to probe each point. The probed z-values will
#   be averaged. The default is to probe 1 time.
sample_retract_dist: 4.0
#   The distance (in mm) to lift the toolhead between each sample (if
#   sampling more than once). The default is 2mm.
#lift_speed:
#   Speed (in mm/s) of the Z axis when lifting the probe between
#   samples. The default is to use the same value as the 'speed'
#   parameter.
#samples_result: average
#   The calculation method when sampling more than once - either
#   "median" or "average". The default is average.
#samples_tolerance: 0.100
#   The maximum Z distance (in mm) that a sample may differ from other
#   samples. If this tolerance is exceeded then either an error is
#   reported or the attempt is restarted (see
#   samples_tolerance_retries). The default is 0.100mm.
#samples_tolerance_retries: 0
#   The number of times to retry if a sample is found that exceeds
#   samples_tolerance. On a retry, all current samples are discarded
#   and the probe attempt is restarted. If a valid set of samples are
#   not obtained in the given number of retries then an error is
#   reported. The default is zero which causes an error to be reported
#   on the first sample that exceeds samples_tolerance.

activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}
    
#deactivate_gcode:
#   A list of G-Code commands to execute after each probe attempt
#   completes. See docs/Command_Templates.md for G-Code format. Do not
#   issue any commands here that move the toolhead. The default is to
#   not run any special G-Code commands on deactivation.
#[bltouch]
#sensor_pin: ^EBB:gpio21
#control_pin: EBB:gpio22

## NPN and PNP proximity switch types can be set by jumper
#[probe]
#pin: ^EBB:gpio6

#[output_pin endstop]
#pin: EBB:gpio13

# i2c_bus:i2c0h
# i2c_software_scl_pin: EBB:gpio29
# i2c_software_sda_pin: EBB:gpio28

# lis2dw_int1: EBB:gpio25
# led_pin: EBB:gpio24